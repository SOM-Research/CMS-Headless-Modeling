package edu.uoc.som.cmsdiscover.generator;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class SearchQueryTemplate {
  public CharSequence generate(final String packageName) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package generated.middleware.");
    _builder.append(packageName);
    _builder.append(".drivers;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.newLine();
    _builder.append("import java.io.UnsupportedEncodingException;");
    _builder.newLine();
    _builder.append("import java.net.URLEncoder;");
    _builder.newLine();
    _builder.append("import java.nio.charset.StandardCharsets;");
    _builder.newLine();
    _builder.append("import java.util.HashMap;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class SearchQueryBuilder implements SearchQueryInterface {");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("HashMap<String, String> filters = new HashMap<>();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("HashMap<String, String> sorters = new HashMap<>();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("HashMap<String, String> embeds = new HashMap<>();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("HashMap<Integer, Integer> pagination = new HashMap<>();");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// FilterRequest");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("String filterQuery = \"\";");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// SortingRequest");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("String sorterQuery = \"\";");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// EmbeddingRequest");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("String embedQuery = \"\";");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Pagination");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("String paginationQuery = \"\";");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public SearchQueryBuilder addFilter(String fieldName, String value) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("filters.put(fieldName, URLEncoder.encode(value, StandardCharsets.UTF_8.toString()));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} catch (UnsupportedEncodingException e) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("// TODO Auto-generated catch block");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("e.printStackTrace();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/*String filter;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("filter = URLEncoder.encode(value, StandardCharsets.UTF_8.toString());");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.filterQuery = this.filterQuery + \"&filter[\"+fieldName+\"]=\"+filter;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} catch (UnsupportedEncodingException e1) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("// TODO Auto-generated catch block");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("e1.printStackTrace();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}*/");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public SearchQueryBuilder addSorter(String fieldName, String sortType) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("sorters.put(fieldName,sortType);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/*");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if(sortType.contains(\"ASC\")) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.sorterQuery = \"&sort=\"+fieldName;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("else {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.sorterQuery = \"&sort=-\"+fieldName;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}*/");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public SearchQueryBuilder addEmbedReference(String referenceName) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("embeds.put(\"embed\",referenceName);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("//this.embedQuery = \"&include=\"+referenceName;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public SearchQueryBuilder addPagination(int pageOffset, int pageLimit) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("pagination.put(pageOffset,pageLimit);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/*if ((pageOffset != 0) && (pageLimit != 0)) this.paginationQuery = \"&page[offset]=\"+pageOffset+\"&page[limit]=\"+pageLimit;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (pageOffset != 0) this.paginationQuery = \"&page[offset]=\"+pageOffset;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (pageLimit != 0) this.paginationQuery = \"&page[limit]=\"+pageLimit;*/");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public SearchQueryBuilder manageConsumer(String user, String password) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// TODO Auto-generated method stub");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public SearchQuery build() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return new SearchQuery(filters,sorters,embeds,pagination);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
